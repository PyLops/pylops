# Azure pipeline for PyLops

# Only build the master branch, tags, and PRs (on by default) to avoid building random
# branches in the repository until a PR is opened.
trigger:
  branches:
    include:
    - master
    - dev
    - refs/tags/*

jobs:


# Windows
########################################################################################
# - job:
#   displayName: 'Windows'
#
#   pool:
#     vmImage: 'windows-2019'
#
#   variables:
#     NUMBA_NUM_THREADS: 1
#
#   steps:
#   - task: UsePythonVersion@0
#     inputs:
#       versionSpec: '3.7'
#       architecture: 'x64'
#
#   - script: |
#       python -m pip install --upgrade pip setuptools wheel django
#       pip install -r requirements-dev.txt
#       pip install .
#     displayName: 'Install prerequisites and library'
#
#   - script: |
#       python setup.py test
#     condition: succeededOrFailed()
#     displayName: 'Run tests'


# Mac
########################################################################################
- job:
  displayName: 'Mac'

  pool:
    vmImage: 'macOS-latest'

  variables:
    NUMBA_NUM_THREADS: 1
    KMP_DUPLICATE_LIB_OK: TRUE
    MKL_THREADING_LAYER: GNU
    MKL_INTERFACE_LAYER: GNU
    OMP_NESTED: FALSE

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip setuptools wheel django
      pip install -r requirements-dev.txt
      pip install .
    displayName: 'Install prerequisites and library'

  - script: |
      python setup.py test
    condition: succeededOrFailed()
    displayName: 'Run tests'


# Linux
########################################################################################
- job:
  displayName: 'Linux'

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    NUMBA_NUM_THREADS: 1
    MKL_THREADING_LAYER: GNU
    MKL_INTERFACE_LAYER: GNU
    OMP_NESTED: FALSE

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip setuptools wheel django
      pip install -r requirements-dev.txt
      pip install .
    displayName: 'Install prerequisites and library'

  - script: |
      python setup.py test
    condition: succeededOrFailed()
    displayName: 'Run tests'
