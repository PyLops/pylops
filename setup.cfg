[metadata]
name = pylops
fullname = PyLops
description = Python library implementing linear operators to allow solving large-scale optimization problems
long_description = file: README.md
long_description_content_type = text/markdown
author = The PyLops Development Team
author_email = matteoravasi@gmail.com
maintainer = "Matteo Ravasi"
maintainer_email = matteoravasi@gmail.com
license = LGPL-3.0 License
license_file = LICENSE.md
platform = any
keywords = algebra, inverse problems, large-scale optimization
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Intended Audience :: Education
    License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3),
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Scientific/Engineering : Mathematics
url = https://github.com/pylops/pylops

project_urls =
    Documentation = https://pylops.readthedocs.io/
    Release Notes = https://github.com/pylops/pylops/releases
    Bug Tracker = https://github.com/pylops/pylops/issues
    Source Code = https://github.com/pylops/pylops

[options]
zip_safe = True
include_package_data = True
packages = find:
python_requires = >=3.8
install_requires =
    numpy >= 1.21.0
    scipy >= 1.4.0

[options.extras_require]
advanced =
    llvmlite
    numba
    pyfftw
    PyWavelets
    scikit-fmm
    spgl1

[aliases]
test=pytest

[tool:pytest]
addopts = --verbose
python_files = pytests/*.py

[flake8]
ignore = E203, E501, W503, E402
per-file-ignores =
    __init__.py: F401, F403, F405
max-line-length = 88

# mypy global options
[mypy]
plugins = numpy.typing.mypy_plugin
ignore_errors = False
allow_redefinition = True

# mypy per-module options
[mypy-IPython.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-numba.*]
ignore_missing_imports = True

[mypy-pyfftw.*]
ignore_missing_imports = True

[mypy-pywt.*]
ignore_missing_imports = True

[mypy-spgl1.*]
ignore_missing_imports = True

[mypy-skfmm.*]
ignore_missing_imports = True

[mypy-devito.*]
ignore_missing_imports = True

[mypy-examples.*] # devito-examples
ignore_missing_imports = True

[mypy-cupy.*]
ignore_missing_imports = True
